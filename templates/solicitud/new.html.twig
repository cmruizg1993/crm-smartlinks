{% extends 'base.html.twig' %}

{% block title %}New Solicitud{% endblock %}

{% block stylesheets %}
    <style>
        #map{
            height: 20rem;
        }
    </style>
{% endblock %}
{% block body %}
    <h1>Create new Solicitud</h1>

    {{ include('solicitud/_form.html.twig') }}

    <a href="{{ path('solicitud_index') }}">back to list</a>
{% endblock %}

{% block javascript %}

    <script async defer src="https://maps.googleapis.com/maps/api/js?language=es-EC&key=AIzaSyCWVEScNll7PFoAnItsNGnFG_ogFZzEPBU&libraries=places&callback=initMap&channel=GMPSB_addressselection_v1_cABC"></script>
    <script>
        function initMap() {
            const map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 0, lng: -79.98633 },
                zoom: 13,
            });
            var marker = new google.maps.Marker({
                position: map.getCenter(),
                draggable: true,
                map: map,
                //icon: icon,
                title: 'Ubicación'
            });
            var showPosition = function (position) {
                var lat = position.coords.latitude ;
                var lng = position.coords.longitude;
                marker.setPosition({lat,lng});
            }
            marker.addListener("drag", function() {
                map.setCenter(marker.getPosition());
                setLatLng(marker.getPosition().lat(),marker.getPosition().lng())
            });
            marker.addListener("position_changed", function() {
                map.setCenter(marker.getPosition());
                setLatLng(marker.getPosition().lat(),marker.getPosition().lng())
            });

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("Geolocalización no soportada");
            }



            const card = document.getElementById("pac-card");
            const input = document.getElementById("pac-input");
            const biasInputElement = document.getElementById("use-location-bias");
            const strictBoundsInputElement = document.getElementById("use-strict-bounds");
            const options = {
                componentRestrictions: { country: "ec" },
                fields: ["formatted_address", "geometry", "name"],
                origin: map.getCenter(),
                strictBounds: false,
            };
            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);
            const autocomplete = new google.maps.places.Autocomplete(input, options);
            // Bind the map's bounds (viewport) property to the autocomplete object,
            // so that the autocomplete requests use the current map bounds for the
            // bounds option in the request.
            autocomplete.bindTo("bounds", map);
            const infowindow = new google.maps.InfoWindow();
            const infowindowContent = document.getElementById("infowindow-content");
            infowindow.setContent(infowindowContent);

            autocomplete.addListener("place_changed", () => {
                infowindow.close();
                marker.setVisible(true);
                const place = autocomplete.getPlace();

                if (!place.geometry || !place.geometry.location) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert("No details available for input: '" + place.name + "'");
                    return;
                }

                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);
                infowindowContent.children["place-name"].textContent = place.name;
                infowindowContent.children["place-address"].textContent =
                    place.formatted_address;
                infowindow.open(map, marker);

            });
            function setLatLng(lat, lng){
                document.getElementById('solicitud_lat').value = lat;
                document.getElementById('solicitud_lng').value = lng;
            }

        }
    </script>

{% endblock %}